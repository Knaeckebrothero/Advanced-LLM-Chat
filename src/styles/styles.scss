// Variables and Mixins
@import 'variables';
// @import 'mixins';

// Angular Material Theming
@use '@angular/material' as mat;

// Custom palettes using color variables
$custom-primary: mat.define-palette(mat.define-color($color-primary));
$custom-accent: mat.define-palette(mat.define-color($color-accent));
$custom-warn: mat.define-palette(mat.define-color($color-warn));
/*
$custom-primary: mat.define-palette(mat.$indigo-palette);
$custom-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);
$custom-warn: mat.define-palette(mat.$red-palette);
*/

$custom-theme: mat.define-dark-theme((
  color: (
    primary: $custom-primary,
    accent: $custom-accent,
    warn: $custom-warn,
  )
));

// Global Styles
html, body {
  height: 100%;
  margin: 0;
  font-family: $font-family-base;
  background-color: $color-background;
}

// Apply the theme to Angular Material components
@include mat.all-component-themes($custom-theme);
@include mat.core();

// Responsive and Accessibility Styles
// Add here if needed

// Component-Level Styles
// Import or include additional styles for specific components


/*
### Text that has been generated by the Angular CLI ###

More information about angular Material Theming:
https://material.angular.io/guide/theming

Include the common styles for Angular Material. 
We include this here so that you only have to load a single css file for Angular Material in your app. 
Be sure that you only ever include this mixin once!

Define the palettes for your theme using the Material Design palettes available in palette.scss (imported above). 
For each palette, you can optionally specify a default, lighter, and darker hue. 
Available color palettes: https://material.io/design/color/

Include theme styles for core and each component used in your app.
Alternatively, you can import and @include the theme mixins for each component that you are using.
*/